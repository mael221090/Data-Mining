total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
#res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (y)
}
getChi2(1, 0, 4, 0, 1, 0)
getChi2=function(x1, x2, x3, y1, y2, y3){
x = c(x1, x2, x3)
y = c(y1, y2, y3)
tc = c(1:length(x))
t1 = 0
t2 = 0
for(i in 1:length(x)){
t1 = t1 + x[i]
t2 = t2 + y[i]
tc[i] = x[i] + y[i]
}
t = c(t1, t2)
total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
#res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (ey)
}
getChi2(1, 0, 4, 0, 1, 0)
getVal(0, 0167)
getVal(0, 0.167)
getVal(01, 0.83)
getVal(0, 0.167)
getVal=function(o, e){
if(e < 0.5)
e = 0.5
res=(o-e)*(o-e)/e
return (res)
}
getVal=function(o, e){
if(e < 0.5)
e = 0.5
res=(o-e)*(o-e)/e
return (res)
}
getVal(1, 0.83)
play <- read.csv('play.csv')
getChi2=function(x1, x2, x3, y1, y2, y3){
x = c(x1, x2, x3)
y = c(y1, y2, y3)
tc = c(1:length(x))
t1 = 0
t2 = 0
for(i in 1:length(x)){
t1 = t1 + x[i]
t2 = t2 + y[i]
tc[i] = x[i] + y[i]
}
t = c(t1, t2)
total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (res)
}
getChi2(1, 0, 4, 0, 1, 0)
getVal=function(o, e){
tmp = e
if(e < 0.5)
tmp = 0.5
res=(o-e)*(o-e)/tmp
return (res)
}
getVal(1, 0.83)
play <- read.csv('play.csv')
getChi2=function(x1, x2, x3, y1, y2, y3){
x = c(x1, x2, x3)
y = c(y1, y2, y3)
tc = c(1:length(x))
t1 = 0
t2 = 0
for(i in 1:length(x)){
t1 = t1 + x[i]
t2 = t2 + y[i]
tc[i] = x[i] + y[i]
}
t = c(t1, t2)
total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (res)
}
s = getChi2(6, 0, 1, 7, 2, 3)
s
getChi2(1, 0, 4, 0, 1, 0)
getChi2=function(x1, x2, y1, y2){
x = c(x1, x2)
y = c(y1, y2)
tc = c(1:length(x))
t1 = 0
t2 = 0
for(i in 1:length(x)){
t1 = t1 + x[i]
t2 = t2 + y[i]
tc[i] = x[i] + y[i]
}
t = c(t1, t2)
total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (res)
}
getChi2(1, 1, 1, 0)
getChi2(1, 0, 2, 0)
getChi2(2, 0, 1, 0)
getChi2(1, 0, 0, 1)
getChi2(0, 1, 0, 1)
getChi2(0, 1, 0, 2)
getChi2(0, 2, 1, 1)
getChi2(1, 1, 1, 0)
getChi2(1, 0, 2, 0)
getChi2(2, 0, 0, 1)
4/3
getChi2=function(x1, x2, y1, y2){
x = c(x1, x2)
y = c(y1, y2)
tc = c(1:length(x))
t1 = 0
t2 = 0
for(i in 1:length(x)){
t1 = t1 + x[i]
t2 = t2 + y[i]
tc[i] = x[i] + y[i]
}
t = c(t1, t2)
total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (ex)
}
getChi2(1, 1, 1, 0)
getChi2=function(x1, x2, y1, y2){
x = c(x1, x2)
y = c(y1, y2)
tc = c(1:length(x))
t1 = 0
t2 = 0
for(i in 1:length(x)){
t1 = t1 + x[i]
t2 = t2 + y[i]
tc[i] = x[i] + y[i]
}
t = c(t1, t2)
total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (ey)
}
getChi2(1, 1, 1, 0)
getVal(1, 1.33)
getVal(1, 0.667)
getVal(0, 0.333)
getChi2=function(x1, x2, y1, y2){
x = c(x1, x2)
y = c(y1, y2)
tc = c(1:length(x))
t1 = 0
t2 = 0
for(i in 1:length(x)){
t1 = t1 + x[i]
t2 = t2 + y[i]
tc[i] = x[i] + y[i]
}
t = c(t1, t2)
total = t1 + t2
ex = c(1:length(x))
ey = c(1:length(y))
for(i in 1:length(x)){
ex[i] = t[1] * tc[i] / total
ey[i] = t[2] * tc[i] / total
}
res = 0.0
as.double(res)
for(i in 1:length(x)){
res = res + getVal(x[i], ex[i])
res = res + getVal(y[i], ey[i])
}
return (res)
}
getChi2(1, 1, 1, 0)
isc=function(dataset, N){
intervals=c(1:N)
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
dataset <- dataset[order(dataset[,attribute]),]
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
tmp = dataset[1, attribute]
for(i in 1:nrow(dataset)){
if(dataset[i, attribute] == tmp)
dataset[i, attribute] <- intervals[1]
else
dataset[i, attribute] <- intervals[ceiling((dataset[i, attribute]-tmp)/width)]
}
}
}
return(dataset)
}
loan = read.csv('Loan.csv')
disc=function(dataset, N){
intervals=c(1:N)
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
dataset <- dataset[order(dataset[,attribute]),]
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
tmp = dataset[1, attribute]
for(i in 1:nrow(dataset)){
if(dataset[i, attribute] == tmp)
dataset[i, attribute] <- intervals[1]
else
dataset[i, attribute] <- intervals[ceiling((dataset[i, attribute]-tmp)/width)]
}
}
}
return(dataset)
}
disc(loan, 5)
disc(loan, 4)
getChi2(4, 0, 0, 6)
getChi2(0, 6, 1, 1)
getChi2(3, 0, 2, 3)
getChi2(5, 1, 0, 6)
getChi2(4, 1, 2, 3)
getChi2(0, 6, 6, 4)
chi2(loan)
loan = read.csv('Loan.csv')
loan
chi2(loan)
chiM(loan)
chi2(loan, alp=0.05)
entropy=function(x1, x2, n){
res = -(x1/n)*log2(x1/n)-(x2/n)*log2(x2/n)
return(res)
}
entropy(3, 2, 5)
-2*log(2)*1/5
-2*log(2)*1/5 + 3*log(3)/5
log(1)
(1/5)*(-2*log(2)+3*log(3))
-2*log(2)
log(2)
log2(2)
(1/5)*(-2*log2(2) + 3*log2(3)
)
(1/5)*(-2*log2(2) + 3*log2(3))
loan = read.csv('Loan.csv')
c1 <- cut(loan$Income, breaks = seq(12, 53, by = 8.2))
table(c1)
disc=function(dataset, N){
width = <- (max(dataset[,Income]) - min(dataset[,Income]))/N
c1 <- cut(dataset$Income, breaks = seq(min(dataset[,Income]), max(dataset[,Income]), by = width))
table(c1)
}
disc(loan, 5)
disc=function(dataset, N){
width <- (max(dataset[,Income]) - min(dataset[,Income]))/N
c1 <- cut(dataset$Income, breaks = seq(min(dataset[,Income]), max(dataset[,Income]), by = width))
table(c1)
}
disc(loan, 5)
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
c1 <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))
}
}
disc(loan, 5)
loan
for(attribute in 1:length(names(dataset))){
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset <- apply(attribute, 2, cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width)))
}
}
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))
}
}
disc(loan, 5)
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))
}
}
loan
]
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))
}
}
}
disc(loan, 5)
loan
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))
}
}
return (dataset)
}
disc(loan, 5)
loan
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))
}
}
return (dataset)
}
loan=disc(loan, 5)
loan
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width, labels=FALSE))
}
}
return (dataset)
}
loan=disc(loan, 5)
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width), labels=FALSE)
}
}
return (dataset)
}
loan=disc(loan, 5)
loan = read.csv('Loan.csv')
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width), labels=FALSE)
}
}
return (dataset)
}
loan=disc(loan, 5)
loan
loan = read.csv('Loan.csv')
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset$bin <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width), labels=FALSE, include.lowest=TRUE)
}
}
return (dataset)
}
loan=disc(loan, 5)
loan
loan = read.csv('Loan.csv')
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset[,attribute] <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width), labels=FALSE, include.lowest=TRUE)
}
}
return (dataset)
}
loan=disc(loan, 5)
loan
loan = read.csv('Loan.csv')
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset[,attribute] <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width), labels=FALSE, include.lowest=TRUE)
}
}
return (dataset)
}
loan=disc(loan, 3)
loan
loan = read.csv('Loan.csv')
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset[,attribute] <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))#, labels=FALSE, include.lowest=TRUE)
}
}
return (dataset)
}
loan=disc(loan, 3)
loan
loan = read.csv('Loan.csv')
disc=function(dataset, N){
for(attribute in 1:length(names(dataset))){
if(is.numeric(dataset[,attribute]))
{
width <- (max(dataset[,attribute]) - min(dataset[,attribute]))/N
dataset[,attribute] <- cut(dataset[,attribute], breaks = seq(min(dataset[,attribute]), max(dataset[,attribute]), by = width))#, labels=FALSE, include.lowest=TRUE)
}
}
return (dataset)
}
loan=disc(loan, 2)
loan
-2*log2(2)+3*log2(3)
2.75/5
3*log2(3)/5
0.97-0.951
