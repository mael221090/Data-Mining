}
w <- perceptron(d, 0.1, d$Species)
v <- vector(1:20)
v <- vector(length=nrow(d))
v
v <- vector(length=nrow(d), mode="integer")
v <- vector(length=nrow(d), mode="numeric")
v
d[1,]*v
d[1,-5]*v
perceptron=function(D, eta=1, class){
converged <- FALSE
w <- vector(length=nrow(D), mode="numeric")
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
# output y != input class(y)
if(sum(w*D[i,-5]) != class[i]){
w[i] = w[i] + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
sum(d[1,-5]*v)
d$Species[1]
d <- iris[iris$Species == c('setosa', 'versicolor'),]
d
d$Species
d$Species[1]
perceptron=function(D, eta=1, class){
converged <- FALSE
w <- vector(length=nrow(D), mode="numeric")
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
# output y != input class(y)
if(sum(w*D[i,-5]) != class[i]){
#w[i] = w[i] + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
v = v + d$Species[1]
v = sum(v, d$Species[1])
v
v
v <- vector(length=nrow(d), mode="numeric")
v = sum(v, d$Species[1])
v
perceptron=function(D, eta=1, class){
converged <- FALSE
w <- vector(length=nrow(D), mode="numeric")
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
# output y != input class(y)
if(sum(w*D[i,-5]) != class[i]){
w = sum(w, lass[i]*eta*D[i,])
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=1, class){
converged <- FALSE
w <- vector(length=nrow(D), mode="numeric")
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
# output y != input class(y)
if(sum(w*D[i,-5]) != class[i]){
w = sum(w, class[i]*eta*D[i,])
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
t <- 0.1*d[1,]
t <- 0.1%%*%%d[1,]
t <- 0.1%*%d[1,]
t <- 1%*%d[1,]
d[1,]
class(d[1,])
x <- as.vector(d[1,])
x
v
v <- vector(length=nrow(d), mode="numeric")
v*d$Species['1']
v
d$Species[1,]
d$Species[1]
d$Species
perceptron=function(D, eta=1, class){
b <- 0
converged <- FALSE
w <- c(1:nrow(D))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
# output y != input class(y)
if((sum(w * D) + b) != class[i]){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
d[1,]
x <- d$Species
x
x <- factor)x
x <- factor(x)
x
x <- as.factor(x)
x
x <- factor(x, levels=c(0,1))
x
x <- d$Species
y <- x
factor(y)
y <- factor(y, levels=c("0", "1"))
y
y <- x
y <- factor(y, levels=2)
y
y <- x
y[y=="setosa"] <- "0"
d$Species[d$Species == "setosa"] <- "0"
y <- factor(y)
y
y <- x
y
y <- factor(y)
y
y <- x
dummy <- as.numeric(y == "versicolor")
dummy
d$Species <- as.numeric(d$Species == "versicolor")
d
d$Species <- as.numeric(d$Species == NA)
d
d <- iris[iris$Species == c('setosa', 'versicolor'),]
d
d$Species <- as.numeric(d$Species == "setosa")
d
perceptron=function(D, eta=1, class){
b <- 0
converged <- FALSE
w <- c(1:nrow(D))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w, D[i,]) + b
# output y != input class(y)
if(a != class[i]){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
View(d)
w <- perceptron(d, 0.1, d$Species)
x <- c(1:20)
x
x <- c(1:nrow(d))
x
x <- c(1:ncol(d))
x
x <- c(1:ncol(d)-1)
x
x <- c(1:(ncol(d)-1))
x
x <- x * d[1,]
x
View(d)
d <- iris[iris$Species == c('setosa', 'versicolor'),]
View(d)
row.names(d) <- NULL
View(d)
d$Species <- as.numeric(d$Species == "setosa")
View(d)
d[1,]
View(d)
x
x <- c(1:(ncol(d)-1))
x
x <- x * d[1,]
x
perceptron=function(D, eta=1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:ncol(D)){
a <- sum(w, D[i,]) + b
# output y != input class(y)
if(a != class[i]){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
x <- c(1:(ncol(d)-1))
x + d[1,]
View(d)
perceptron=function(D, eta=1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:ncol(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(a != class[i]){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:ncol(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(y*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
print(class[i])
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=1, class){
b <- 1
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
print(a)
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
print(a)
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
d$Species
d$Species[d$Species == 0]
d$Species[d$Species == 0] <- -1
d$Species
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
w
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- c(1:(ncol(D) - 1))
print(w)
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
View(d)
t <- seq(1, length.out=4)
t
t <- rep(1, 4)
t
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- rep(1,(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- rep(1,(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
print(w)
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
w
t <- t*d[1,]
t
t <- as.vector(t)
t
t <- as.array(t)
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- rep(1,(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*c(D[i,])) + b
print(w)
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
names(t) <- NULL
t
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- rep(1,(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
print(w)
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
perceptron=function(D, eta=0.1, class){
b <- 0
converged <- FALSE
w <- rep(1,(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.1, d$Species)
w
w <- perceptron(d, 1, d$Species)
w <- perceptron(d, 5, d$Species)
w <- perceptron(d, 0.00002, d$Species)
df <- transform(d, C = sample(C))
df <- transform(d)
df
df=d[sample(nrow(d)),]
df
w <- perceptron(df, 0.02, df$Species)
w
perceptron=function(D, eta=0.1, class){
b <- 1
converged <- FALSE
w <- rep(1,(ncol(D) - 1))
while(!converged){
converged <- TRUE
for(i in 1:nrow(D)){
a <- sum(w*D[i,]) + b
# output y != input class(y)
if(class[i]*a <= 0){
w <- w + class[i]*eta*D[i,]
converged <- FALSE
}
}
}
return (w)
}
w <- perceptron(d, 0.2, d$Species)
w
